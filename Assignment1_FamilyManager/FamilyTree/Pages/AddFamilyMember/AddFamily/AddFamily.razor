@page "/addFamily"
@page "/"
@using LoginExample.Data.AddFamilyMembersService
@using global::Models
@using LoginExample.Models.Family.Child
@using LoginExample.Models.Family.Child.Pet
@inject IAddFamilyMembersService AddFamilyMembersService;

<link rel="stylesheet" type="text/css" href="css/AddMembers/AddFamily/style.css">
<div id="form-navigation-container">

    <!-- Checks to see if current step is not equal to first step via SetNavButtons() method -->
    <MatButton Class="previous" disabled="@Wizard.PreviousButtonDisabled" @onclick="Wizard.GoToPreviousStep">Previous Step</MatButton>

    <!-- Checks to see if current step is not equal to last step via SetNavButtons() method -->
    <MatButton Unelevated="true" disabled="@Wizard.NextButtonDisabled" @onclick="Wizard.GoToNextStep">Next Step</MatButton>
</div>

<!-- Progress bar gets incremented/decremented via GoToNextStep()/GoToPreviousStep() methods -->
<MatProgressBar Class="progress" Progress="@Wizard.Progress" aria-valuenow="@Wizard.Progress" aria-valuemin="0" aria-valuemax="1"></MatProgressBar>
@if (Wizard.Step == 0)
{
    <div id="familyData" class="card mt-2 mx-auto p-4 bg-light">
        <div class="card-body bg-light">
            <div class="container">
                <p style="font-size: 17px">
                    <u>Complete the following fields</u>

                </p>
                <EditForm Model="@_family">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_name">Family name *</label>
                                <InputTextArea rows="1" id="form_name" @bind-Value="_family.FamilyName" type="text" name="name" class="form-control" placeholder="Please enter the family name *" required="required" data-error="Family name is required."></InputTextArea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_name">Street name *</label>
                                <InputTextArea rows="1" id="form_name" @bind-Value="_family.StreetName" type="text" name="name" class="form-control" placeholder="Please enter the street name*" required="required" data-error="Street name is required."></InputTextArea>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="form_id">House number *</label>
                                <InputNumber id="form_id" rows="1" @bind-Value="_family.HouseNumber" type="number" name="ID" class="form-control" placeholder="Please enter the house number *" required="required" data-error="Valid house number  is required."></InputNumber>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}
else if (Wizard.Step == 1)
{
    <div class="card mt-2 mx-auto p-4 bg-light">
        <div class="card-body bg-light">
            <div class="container">
                <p style="font-size: 17px">
                    <u>Firstly, you should choose the adult(s) :</u>
                    Select from the following list
                </p>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByAdultFirstName" @bind-Value="_selectedAdult" placeholder="Search by first name..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.FirstName @context.LastName
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.FirstName @context.LastName
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByAdultId" @bind-Value="_selectedAdult" placeholder="Search by ID..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.Id @context.LastName
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.Id @context.LastName
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                @* If statement sets the table data to the search result *@
                @if (_selectedAdult != null)
                {
                    List<Adult> temp = new List<Adult>();
                    temp.Add(_selectedAdult);
                    _adultsDisplayed = temp;
                    _selectedAdult = null;
                }
                <br/>
                @* Show all data button *@
                <div class="row">
                    <div class="col-md-2">
                        <div class="button_cont" align="center"@onclick="@(ShowAllAdults)">
                            <input type="button" class="example_d" value="Display all adults" @onclick="@(ShowAllAdults)">
                        </div>
                    </div>
                </div>
                <form id="pets-form" role="form">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <table class="table">
                                    <thead>
                                    <tr>
                                        <th>
                                            Select
                                        </th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Sex</th>
                                        <th>ID</th>
                                        <th>HairColor</th>
                                        <th>EyeColor</th>
                                        <th>Age</th>
                                        <th>Weight</th>
                                        <th>Height</th>
                                        <th>Job</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    <!-- If the logged in user is an adult it will be highlighted -->
                                    @* <tr class="active-row"> *@
                                    @* 
                               @* </tr> *@
                                    @foreach (var adult in _adultsDisplayed)
                                    {
                                        <tr>
                                            <td>
                                                <input type="checkbox" checked=@adult.IsPartOfFamily @onchange="@((arg) => AddAdultsToFamily(arg.Value, adult))"/>
                                            </td>
                                            <td>@adult.FirstName</td>
                                            <td>@adult.LastName</td>
                                            <td>@adult.Sex</td>
                                            <td>@adult.Id</td>
                                            <td>@adult.HairColor</td>
                                            <td>@adult.EyeColor</td>
                                            <td>@adult.Age</td>
                                            <td>@adult.Weight</td>
                                            <td>@adult.Height</td>
                                            <td>@adult.JobTitle</td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
    @* Second step in family creation *@
else if (Wizard.Step == 2)
{
    <div class="card mt-2 mx-auto p-4 bg-light">
        <div class="card-body bg-light">
            <div class="container">
                <p style="font-size: 17px">
                    <u>Good, now you should choose the children :</u>
                    Select from the following list
                </p>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByChildFirstName" @bind-Value="_selectdChild" placeholder="Search by first name..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.FirstName @context.LastName
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.FirstName @context.LastName
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByChildId" @bind-Value="_selectdChild" placeholder="Search by ID..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.Id @context.LastName
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.Id @context.LastName
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-2">
                        <div class="button_cont" align="center"@onclick="@(ShowAllChildren)">
                            <input type="button" class="example_d" value="Display all children" @onclick="@(ShowAllChildren)">
                        </div>
                    </div>
                </div>
                @* If statement sets the table data to the search result *@
                @if (_selectdChild != null)
                {
                    List<Child> temp = new List<Child>();
                    temp.Add(_selectdChild);
                    _childrenDisplayed = temp;
                    _selectdChild = null;
                }
                @* Table  *@
                @if (_childrenDisplayed == null)
                {
                    <p>
                        <em>Loading...</em>
                    </p>
                }
                else
                {
                    <table class="table">
                        <thead>
                        <tr>
                            <th>
                                Select
                            </th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Sex</th>
                            <th>ID</th>
                            <th>HairColor</th>
                            <th>EyeColor</th>
                            <th>Age</th>
                            <th>Weight</th>
                            <th>Height</th>


                        </tr>
                        </thead>
                        <tbody>
                        <!-- If the logged in user is an adult it will be highlighted -->
                        @* <tr class="active-row"> *@
                        @* 
        @* </tr> *@
                        @foreach (var child in _childrenDisplayed)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" checked=@child.IsPartOfFamily @onchange="@((arg) => AddChildToFamily(arg.Value, child))"/>
                                </td>
                                <td>@child.FirstName</td>
                                <td>@child.LastName</td>
                                <td>@child.Sex</td>
                                <td>@child.Id</td>
                                <td>@child.HairColor</td>
                                <td>@child.EyeColor</td>
                                <td>@child.Age</td>
                                <td>@child.Weight</td>
                                <td>@child.Height</td>

                            </tr>
                        }

                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
}
else if (Wizard.Step == 3)
{
    <div class="card mt-2 mx-auto p-4 bg-light">
        <div class="card-body bg-light">
            <div class="container">
                <p style="font-size: 17px">
                    <u>Choose your family pets</u>

                </p>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByPetName" @bind-Value="_selectedPet" placeholder="Search by name..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.Name @context.Species
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.Name @context.Species
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-4">
                        @* <p> *@
                        <BlazoredTypeahead id="myInput" SearchMethod="FilterByPetId" @bind-Value="_selectedPet" placeholder="Search by ID..." MinimumLength="2">
                            <SelectedTemplate >
                                @context.Id @context.Name
                            </SelectedTemplate>
                            <ResultTemplate>
                                @context.Id @context.Name
                            </ResultTemplate>
                        </BlazoredTypeahead>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-2">
                        <div class="button_cont" align="center"@onclick="@(ShowAllPets)">
                            <input type="button" class="example_d" value="Display all pets" @onclick="@(ShowAllPets)">
                        </div>
                    </div>
                </div>
                @* If statement sets the table data to the search result *@
                @if (_selectedPet != null)
                {
                    List<Pet> temp = new List<Pet>();
                    temp.Add(_selectedPet);
                    _petDisplayed = temp;
                    _selectedPet = null;
                }
                @if (_petDisplayed == null)
                {
                    <p>
                        <em>Loading...</em>
                    </p>
                }
                else
                {
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Select</th>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Age</th>
                            <th>Species</th>
                        </tr>
                        </thead>
                        <tbody>
                        <!-- If the logged in user is an adult it will be highlighted -->
                        @* <tr class="active-row"> *@
                        @* 
        @* </tr> *@
                        @foreach (var pet in _petDisplayed)
                        {
                            <tr>

                                <td>
                                    <input type="checkbox" checked=@pet.IsPartOfFamily @onchange="@((arg) => AddPetToFamily(arg.Value, pet))"/>
                                </td>

                                <td>@pet.Id</td>
                                <td>@pet.Name</td>
                                <td>@pet.Age</td>
                                <td>@pet.Species</td>
                            </tr>
                        }

                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
}
else if (Wizard.Step == 4)
{
    <div class="card mt-2 mx-auto p-4 bg-light">
        <div class="card-body bg-light">
            <div class="container">
                <p style="font-size: 17px">
                    <u>Family overview. </u>
                </p>
                <p>Check if the you entered data is correct</p>
                <div class="border border-success">
                    <div class="row ">
                        <div class="col-md-4">
                            1. Family name: @_family.FamilyName
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            2. Street name: @_family.StreetName
                        </div>
                        <div class="col-md-2 offset-md-6">
                            <a href="#familyData">
                                <button class="button button1">Edit</button>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            3. House number: @_family.HouseNumber
                        </div>
                    </div>
                </div>
                <br/>

                <div class="border border-success">
                    <p>4. Family adults: </p>
                    <div class="row ">
                        <div class="col-md-9">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Sex</th>
                                    <th>ID</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var adult in _familyAdults)
                                {
                                    <tr>
                                        <td>@adult.FirstName</td>
                                        <td>@adult.LastName</td>
                                        <td>@adult.Sex</td>
                                        <td>@adult.Id</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        <div class="col-md-2 offset-1">
                            <a href="#familyData">
                                <button class="button button1">Edit</button>
                            </a>
                        </div>
                    </div>
                </div>

                <div class="border border-success">
                    <p>5. Family children: </p>
                    <div class="row ">
                        <div class="col-md-9">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Sex</th>
                                    <th>ID</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var children in _familyChildren)
                                {
                                    <tr>
                                        <td>@children.FirstName</td>
                                        <td>@children.LastName</td>
                                        <td>@children.Sex</td>
                                        <td>@children.Id</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        <div class="col-md-2 offset-1">
                            <a href="#familyData">
                                <button class="button button1">Edit</button>
                            </a>
                        </div>
                    </div>
                </div>

                <div class="border border-success">
                    <p>6. Family pets: </p>
                    <div class="row ">
                        <div class="col-md-9">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Age</th>
                                    <th>Species</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var pet in _familyPets)
                                {
                                    <tr>
                                        <td>@pet.Id</td>
                                        <td>@pet.Name</td>
                                        <td>@pet.Age</td>
                                        <td>@pet.Species</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>

                        <div class="col-md-2 offset-1">
                            <a href="#familyData">
                                <button class="button button1">Edit</button>
                            </a>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
}
else if (Wizard.Step == 5)
{
    CreateFamily();
    <div class="col-md-2 offset-1">
      <lable
      > @CreateFamilyResultLabel</lable>
    </div>
    


}

@code {
    Wizard Wizard = new Wizard();

    Family _family = new Family();
    // List of the user checked adults that should form the family
    private List<Adult> _familyAdults = new List<Adult>();
    // List of the user checked children that should form the family
    private List<Child> _familyChildren = new List<Child>();
    // List of the user checked pet that should form the family
    private List<Pet> _familyPets = new List<Pet>();

    private string CreateFamilyResultLabel;

    // Following fields used for the first step of creating the family
    // _allAdults stores all adults in the system
    // _adultsDisplayed stores adults that should displayed after a specific search,
    //    by default its value contains the same data as _allAdults
    // selectedAdult store user selected search result
    private List<Adult> _allAdults;
    private List<Adult> _adultsDisplayed;
    private Adult _selectedAdult;

    // Following fields used for the first step of creating the family
    // _allChildren stores all adults in the system
    // _childrenDisplayed stores adults that should displayed after a specific search,
    //    by default its value contains the same data as _allChildren
    // _selectdChild store user selected search result
    private IList<Child> _childrenDisplayed;
    private IList<Child> _allChildren;
    private Child _selectdChild;

    // Following fields used for the first step of creating the family
    // _allPets stores all adults in the system
    // _petDisplayed stores adults that should displayed after a specific search,
    //    by default its value contains the same data as _allPets
    // _selectedPet store user selected search result
    private IList<Pet> _petDisplayed;
    private IList<Pet> _allPets;
    private Pet _selectedPet;


    protected override async Task OnInitializedAsync()
    {
    // Load list of adults
        _allAdults = AddFamilyMembersService.GetListOfAdults();
        _adultsDisplayed = _allAdults;

    // Load list of children
        _allChildren = AddFamilyMembersService.GetListOfChildren();
        _childrenDisplayed = _allChildren;

    // Load list of pets
        _allPets = AddFamilyMembersService.GetListOfPets();
        _petDisplayed = _allPets;
    }

    // Select Adults


    /// Method receives true/false weather the user has cheked/unchecked the field. If
    /// the user has checked the field the parameter 'child' will be added to the buffer(Adults list)
    ///  otherwise it will be deleted from it
    private void AddAdultsToFamily(object changeEventArgs, Adult adult)
    {
        if ((bool) changeEventArgs)
        {
            adult.IsPartOfFamily = true;
            _familyAdults.Add(adult);
        }
        else
        {
            adult.IsPartOfFamily = false;
            _familyAdults.Remove(adult);
        }
    }

    private async Task<IEnumerable<Adult>> FilterByAdultFirstName(string name)
    {
        return await Task.FromResult(_adultsDisplayed.Where(x => x.FirstName.ToLower().Contains(name.ToLower())).ToList());
    }

    private async Task<IEnumerable<Adult>> FilterByAdultId(string enteredId)
    {
        return await Task.FromResult(_adultsDisplayed.Where(x => x.Id.ToString().Contains(enteredId.ToLower())).ToList());
    }

    private void ShowAllAdults()
    {
        _adultsDisplayed = _allAdults;
    }

    // Select Children


    /// Method receives true/false weather the user has cheked/unchecked the field. If
    /// the user has checked the field the parameter 'child' will be added to the buffer(Child list)
    ///  otherwise it will be deleted from it
    private void AddChildToFamily(object changeEventArgs, Child child)
    {
        if ((bool) changeEventArgs)
        {
            child.IsPartOfFamily = true;
            _familyChildren.Add(child);
        }
        else
        {
            child.IsPartOfFamily = false;
            _familyChildren.Remove(child);
        }
    }

    private async Task<IEnumerable<Child>> FilterByChildFirstName(string name)
    {
        return await Task.FromResult(_allChildren.Where(x => x.FirstName.ToLower().Contains(name.ToLower())).ToList());
    }

    private async Task<IEnumerable<Child>> FilterByChildId(string enteredId)
    {
        return await Task.FromResult(_allChildren.Where(x => x.Id.ToString().Contains(enteredId.ToLower())).ToList());
    }

    private void ShowAllChildren()
    {
        _childrenDisplayed = _allChildren;
    }


    // Select Pets


    /// Method receives true/false weather the user has cheked/unchecked the field. If
    /// the user has checked the field the parameter 'pet' will be added to the buffer(Pet list)
    ///  otherwise it will be deleted from it
    private void AddPetToFamily(object changeEventArgs, Pet pet)
    {
        if ((bool) changeEventArgs)
        {
            pet.IsPartOfFamily = true;
            _familyPets.Add(pet);
        }
        else
        {
            pet.IsPartOfFamily = false;
            _familyPets.Remove(pet);
        }
    }

    private async Task<IEnumerable<Pet>> FilterByPetName(string name)
    {
        return await Task.FromResult(_allPets.Where(x => x.Name.ToLower().Contains(name.ToLower())).ToList());
    }

    private async Task<IEnumerable<Pet>> FilterByPetId(string enteredId)
    {
        return await Task.FromResult(_allPets.Where(x => x.Id.ToString().Contains(enteredId.ToLower())).ToList());
    }

    private void ShowAllPets()
    {
        _petDisplayed = _allPets;
    }

    private void CreateFamily()
    
    {
        try
        {
            if (_familyAdults==null)
            {
                CreateFamilyResultLabel = "At least one adult required";
            }
            else
            {
                 _family.Adults = _familyAdults;
                           _family.Children = _familyChildren;
                           _family.Pets = _familyPets;
                           AddFamilyMembersService.AddFamily(_family);
                           CreateFamilyResultLabel = "Family created successfully"; 
            }
          
        }
        catch (Exception e)
        {
            CreateFamilyResultLabel = "WTF????";
            Console.WriteLine(e);
        
        }
    }


}